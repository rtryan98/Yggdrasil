// Copyright 2022 Robert Ryan. See Licence.md.

#pragma once

#include <cstdint>

#define YGG_FORWARDDECL_VK_HANDLE(object) typedef struct object##_T* object
#define YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(object) typedef struct object##_T* object

YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkBuffer);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkImage);
YGG_FORWARDDECL_VK_HANDLE(VkInstance);
YGG_FORWARDDECL_VK_HANDLE(VkPhysicalDevice);
YGG_FORWARDDECL_VK_HANDLE(VkDevice);
YGG_FORWARDDECL_VK_HANDLE(VkQueue);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkSemaphore);
YGG_FORWARDDECL_VK_HANDLE(VkCommandBuffer);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkFence);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkDeviceMemory);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkEvent);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkQueryPool);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkBufferView);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkImageView);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkShaderModule);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkPipelineCache);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkPipelineLayout);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkPipeline);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkRenderPass);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkDescriptorSetLayout);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkSampler);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkDescriptorSet);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkDescriptorPool);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkFramebuffer);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkCommandPool);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkSwapchainKHR);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkSurfaceKHR);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkAccelerationStructureKHR);
YGG_FORWARDDECL_VK_NON_DISPATCHABLE_HANDLE(VkDebugUtilsMessengerEXT);

YGG_FORWARDDECL_VK_HANDLE(VmaAllocator);
YGG_FORWARDDECL_VK_HANDLE(VmaPool);
YGG_FORWARDDECL_VK_HANDLE(VmaAllocation);
YGG_FORWARDDECL_VK_HANDLE(VmaDefragmentationContext);

enum VkResult : int32_t;
